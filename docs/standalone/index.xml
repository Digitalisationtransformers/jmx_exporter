<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Standalone on JMX Exporter</title>
    <link>https://prometheus.github.io/jmx_exporter/docs/standalone/</link>
    <description>Recent content in Standalone on JMX Exporter</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://prometheus.github.io/jmx_exporter/docs/standalone/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HTTP Mode</title>
      <link>https://prometheus.github.io/jmx_exporter/docs/standalone/http-mode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://prometheus.github.io/jmx_exporter/docs/standalone/http-mode/</guid>
      <description>HTTP Mode collects metric when accessed via HTTP and returns them as HTTP content.
Installation java -javaagent:jmx_prometheus_javaagent-&amp;lt;VERSION&amp;gt;.jar=[HOSTNAME:]&amp;lt;PORT&amp;gt;:&amp;lt;EXPORTER.YAML&amp;gt; -jar &amp;lt;YOUR_APPLICATION.JAR&amp;gt; NOTES
&amp;lt;PORT&amp;gt; is required [HOSTNAME] is optional if provided, must be separated from &amp;lt;PORT&amp;gt; using a colon (:) (e.g., myserver:12345) Concrete Example java -javaagent:jmx_prometheus_javaagent-1.1.0.jar=12345:exporter.yaml -jar &amp;lt;YOUR_APPLICATION.JAR&amp;gt; Basic YAML Configuration Your application must expose RMI.
exporter.yaml
hostPort: &amp;lt;APPLICATION_HOSTNAME&amp;gt;:&amp;lt;APPLICATION_RMI_PORT&amp;gt; rules: - pattern: &amp;#34;.*&amp;#34; &amp;hellip; or &amp;hellip;
jmxUrl: service:jmx:rmi:///jndi/rmi://&amp;lt;APPLICATION_HOSTNAME&amp;gt;:&amp;lt;APPLICATION_RMI_PORT&amp;gt;/jmxrmi rules: - pattern: &amp;#34;.*&amp;#34; Additional RMI Configuration RMI SSL If your application&amp;rsquo;s RMI server requires SSL you can add ssl: true</description>
    </item>
    
    <item>
      <title>OpenTelemetry Mode</title>
      <link>https://prometheus.github.io/jmx_exporter/docs/standalone/opentelementry-mode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://prometheus.github.io/jmx_exporter/docs/standalone/opentelementry-mode/</guid>
      <description>OpenTelemetry Mode periodically collects metrics and pushes them to an OpenTelemetry endpoint.
Installation Example -jar jmx_prometheus_standalone-&amp;lt;VERSION&amp;gt;.jar exporter.yaml Concrete Example java -javaagent:jmx_prometheus_javaagent-1.1.0.jar exporter.yaml NOTES
No &amp;lt;HOSTNAME&amp;gt; or &amp;lt;PORT&amp;gt; is used Basic YAML Configuration exporter.yaml
openTelemetry: endpoint: http://prometheus:9090/api/v1/otlp protocol: http/protobuf interval: 60 rules: - pattern: &amp;#34;.*&amp;#34; Advanced YAML Configuration OpenTelemetry Mode also supports the use of OTEL environment variables.
exporter.yaml
openTelemetry: # endpoint defined via environment variable &amp;#34;OTEL_EXPORTER_OTLP_ENDPOINT&amp;#34; # protocol defined via environment variable &amp;#34;OTEL_EXPORTER_OTLP_PROTOCOL&amp;#34; # interval defined via environment variable &amp;#34;OTEL_METRIC_EXPORT_INTERVAL&amp;#34; rules: - pattern: &amp;#34;.</description>
    </item>
    
    <item>
      <title>Combined Mode</title>
      <link>https://prometheus.github.io/jmx_exporter/docs/standalone/combined-mode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://prometheus.github.io/jmx_exporter/docs/standalone/combined-mode/</guid>
      <description>Combined Mode allows for both HTTP Mode and OpenTelemetry mode metrics collections methods.
HTTP Mode Exposes metric using an HTTP endpoint.
metrics are collected when the HTTP endpoint is accessed &amp;ldquo;pull&amp;rdquo; model OpenTelemtry Mode Pushes metrics to an OpenTelemetry endpoint.
metrics are periodically collected and pushed OpenTelemetry endpoint &amp;ldquo;push&amp;rdquo; model Installation Example java -jar jmx_prometheus_standalone-&amp;lt;VERSION&amp;gt;.jar [HOSTNAME:]&amp;lt;PORT&amp;gt; &amp;lt;EXPORTER.YAML&amp;gt; NOTES
&amp;lt;PORT&amp;gt; is required [HOSTNAME] is optional Concrete Example java -jar jmx_prometheus_standalone-1.1.0.jar 12345 exporter.</description>
    </item>
    
    <item>
      <title>General Information</title>
      <link>https://prometheus.github.io/jmx_exporter/docs/standalone/general-information/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://prometheus.github.io/jmx_exporter/docs/standalone/general-information/</guid>
      <description>The Standalone JMX Exporter jar runs as a separate application that connects to your application using RMI and collects metrics.
Use of the JMX Exporter Java agent is strongly encouraged due to the complex application RMI configuration required when running the Standalone JMX Exporter.
Jar File The Standalone JMX Exporter is packaged in jmx_prometheus_standalone-&amp;lt;VERSION&amp;gt;.jar
Installation Installation depends on which modes you want to support:
HTTP Mode OpenTelemetry Mode Combined Mode </description>
    </item>
    
  </channel>
</rss>
